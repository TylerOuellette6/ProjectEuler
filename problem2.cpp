#include <iostream>
#include <fstream>
using namespace std;

/**
PROBLEM:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
*/

// Attempt at recursion
// int fib(int x){
// 	if(x == 0){return 0;}
// 	else if(x <= 2){return 1;}
// 	else{return x + fib(x-1);}
// }

int main(){
	// Keep track of what previous and current number
	int curPrev = 1;
	int cur = 1;
	int temp;
	int sum = 0;
	// Less than four million
	while(cur < 4000000){
		// temp is a placeholder in order to find what the next number in the sequence is
		temp = cur;
		cur = cur + curPrev;
		curPrev = temp;
		// See if it's even
		if(cur % 2 == 0){
			sum += cur;
		}
	}

	cout << sum;
	// cout << fib(4); (RECURSION STUFF)
	
	return 0;
}